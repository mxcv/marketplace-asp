@model UserFeedbackViewModel
@inject IViewLocalizer Localizer
@{
	Debug.Assert(Model != null);
	ViewData["Title"] = Model.Seller.Name;
}

@await Html.PartialAsync("UserPartial", new UserViewModel(Model.Seller, true))
<div class="mt-4">
	@foreach (FeedbackDto feedback in Model.Feedback)
	{
		<div class="mt-3 d-flex">
			@if (Model.Seller.Image == null)
			{
				<div class="rounded-circle avatar avatar-sm avatar-none"></div>
			}
			else
			{
				<img src="@Model.Seller.Image" class="rounded-circle avatar avatar-sm">
			}
			<div class="flex-grow-1 ms-2">
				<div>@feedback.Reviewer.Name</div>
				<div class="d-flex">
					@for (int i = 0; i < feedback.Rate; ++i)
					{
						<div class="star"></div>
					}
					@for (int i = feedback.Rate; i < 5; ++i)
					{
						<div class="star star-none"></div>
					}
					<small class="time-iso day d-none">@feedback.Created.ToString("O")</small>
					<small class="ms-3"></small>
				</div>
				<div class="rounded shadow-sm p-3 bg-light">@feedback.Text</div>
			</div>
		</div>
	}
</div>

<form method="get">
	@await Html.PartialAsync("PagePartial", new PageViewModel(Model.Feedback.PageIndex, Model.Feedback.TotalPages, Model.Feedback.TotalCount))
</form>

@section Scripts {
	<script src="~/js/external-info-loader.js"></script>
	<script src="~/js/item-info-filler.js"></script>
}
